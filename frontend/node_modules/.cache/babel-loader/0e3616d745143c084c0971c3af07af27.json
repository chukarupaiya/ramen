{"ast":null,"code":"var _jsxFileName = \"/Users/karupaiyachu/Desktop/project/chat-app/frontend/src/components/ScrollableChat.js\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport \"./Pay.css\";\nimport PayToken from \"./payment/PayToken\";\nimport RequestToken from \"./payment/RequestToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollableChat = ({\n  messages,\n  refAgain\n}) => {\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n    children: messages && messages.map((m, i) => m.payment ? m.payment_type == \"token\" ? m.payment_mode == \"request\" ? /*#__PURE__*/_jsxDEV(RequestToken, {\n      sender_name: m.sender.name,\n      sender_pic: m.sender.pic,\n      sender_id: m.sender._id,\n      content: m.content,\n      id: m._id,\n      messages: messages,\n      m: m,\n      i: i,\n      user_id: user._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PayToken, {\n      sender_name: m.sender.name,\n      sender_pic: m.sender.pic,\n      sender_id: m.sender._id,\n      content: m.content,\n      id: m._id,\n      messages: messages,\n      m: m,\n      i: i,\n      user_id: user._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [(isSameSender(messages, m, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: m.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: m.sender.name,\n          src: m.sender.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${m.sender._id === user._id ? \"rgb(54,57,62)\" : \"rgb(40,43,48)\"}`,\n          marginLeft: isSameSenderMargin(messages, m, i, user._id),\n          marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\",\n          color: \"white\"\n        },\n        children: m.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, m._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ScrollableChat;\nexport default ScrollableChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"sources":["/Users/karupaiyachu/Desktop/project/chat-app/frontend/src/components/ScrollableChat.js"],"names":["Avatar","Tooltip","ScrollableFeed","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatState","PayToken","RequestToken","ScrollableChat","messages","refAgain","user","map","m","i","payment","payment_type","payment_mode","sender","name","pic","_id","content","display","backgroundColor","marginLeft","marginTop","borderRadius","padding","maxWidth","color"],"mappings":"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","sourcesContent":["import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport \"./Pay.css\";\nimport PayToken from \"./payment/PayToken\";\nimport RequestToken from \"./payment/RequestToken\";\n\nconst ScrollableChat = ({ messages ,refAgain}) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) =>\n          m.payment ? (\n            m.payment_type == \"token\" ? (\n              m.payment_mode == \"request\" ? (\n                <RequestToken\n                  sender_name={m.sender.name}\n                  sender_pic={m.sender.pic}\n                  sender_id={m.sender._id}\n                  content={m.content}\n                  id={m._id}\n                  messages={messages}\n                  m={m}\n                  i={i}\n                  user_id={user._id}\n                  \n                ></RequestToken>\n              ) : (\n                <PayToken\n                  sender_name={m.sender.name}\n                  sender_pic={m.sender.pic}\n                  sender_id={m.sender._id}\n                  content={m.content}\n                  id={m._id}\n                  messages={messages}\n                  m={m}\n                  i={i}\n                  user_id={user._id}\n                ></PayToken>\n              )\n            ) : (\n              <div></div>\n            )\n          ) : (\n            <div style={{ display: \"flex\" }} key={m._id}>\n              {(isSameSender(messages, m, i, user._id) ||\n                isLastMessage(messages, i, user._id)) && (\n                <Tooltip\n                  label={m.sender.name}\n                  placement=\"bottom-start\"\n                  hasArrow\n                >\n                  <Avatar\n                    mt=\"7px\"\n                    mr={1}\n                    size=\"sm\"\n                    cursor=\"pointer\"\n                    name={m.sender.name}\n                    src={m.sender.pic}\n                  />\n                </Tooltip>\n              )}\n              <span\n                style={{\n                  backgroundColor: `${\n                    m.sender._id === user._id\n                      ? \"rgb(54,57,62)\"\n                      : \"rgb(40,43,48)\"\n                  }`,\n                  marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                  marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                  borderRadius: \"20px\",\n                  padding: \"5px 15px\",\n                  maxWidth: \"75%\",\n                  color: \"white\",\n                }}\n              >\n                {m.content}\n              </span>\n            </div>\n          )\n        )}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n"]},"metadata":{},"sourceType":"module"}