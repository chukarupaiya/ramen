{"ast":null,"code":"var _jsxFileName = \"/Users/karupaiyachu/Desktop/project/chat-app/frontend/src/components/payment/RequestToken.js\";\nimport { React } from 'react';\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../../config/ChatLogics\";\nimport \"../Pay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RequestToken = props => {\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.get(`/api/message/${selectedChat._id}`, config);\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n\n  var receiver = \"karupaiya\";\n  var amount = props.content;\n  var status = \"Requested\";\n  var date = \"Dec 30\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [(isSameSender(props.messages, props.m, props.i, props.user_id) || isLastMessage(props.messages, props.i, props.user_id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n      label: props.sender_name,\n      placement: \"bottom-start\",\n      hasArrow: true,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        mt: \"7px\",\n        mr: 1,\n        size: \"sm\",\n        cursor: \"pointer\",\n        name: props.sender_name,\n        src: props.sender_pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `${props.sender_id === props.user_id ? \"rgb(54,57,62)\" : \"rgb(40,43,48)\"}`,\n        marginLeft: isSameSenderMargin(props.messages, props.m, props.i, props.user_id),\n        marginTop: isSameUser(props.messages, props.m, props.i, props.user_id) ? 3 : 10,\n        borderRadius: \"20px\",\n        padding: \"5px 15px\",\n        maxWidth: \"75%\",\n        minWidth: \"230px\",\n        color: \"white\",\n        height: props.sender_id === props.user_id ? \"140px\" : \"180px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"payment_user\",\n        children: [\"Requested to \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"payment_amount\",\n        children: [\"$\", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"payment_status\",\n          children: [status, \"\\u2002\\u2002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"payment_date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !(props.sender_id === props.user_id) && /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"pay_btn\",\n          children: \"pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this)]\n  }, props.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RequestToken;\nexport default RequestToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestToken\");","map":{"version":3,"sources":["/Users/karupaiyachu/Desktop/project/chat-app/frontend/src/components/payment/RequestToken.js"],"names":["React","Avatar","Tooltip","ScrollableFeed","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","RequestToken","props","fetchMessages","selectedChat","config","headers","Authorization","user","token","setLoading","data","axios","get","_id","setMessages","socket","emit","error","toast","title","description","status","duration","isClosable","position","receiver","amount","content","date","display","messages","m","i","user_id","sender_name","sender_pic","backgroundColor","sender_id","marginLeft","marginTop","borderRadius","padding","maxWidth","minWidth","color","height","id"],"mappings":"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","sourcesContent":["import {React} from 'react';\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../../config/ChatLogics\";\nimport \"../Pay.css\";\n\n\nconst RequestToken=(props)=>{\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n\n\n  var receiver=\"karupaiya\";\n  var amount=props.content;\n  var status=\"Requested\";\n  var date=\"Dec 30\";\n\n\n\n    return(\n        <div style={{ display: \"flex\" }} key={props.id}>\n              {(isSameSender(props.messages, props.m, props.i, props.user_id) ||\n                isLastMessage(props.messages, props.i, props.user_id)) && (\n                <Tooltip\n                  label={props.sender_name}\n                  placement=\"bottom-start\"\n                  hasArrow\n                >\n                  <Avatar\n                    mt=\"7px\"\n                    mr={1}\n                    size=\"sm\"\n                    cursor=\"pointer\"\n                    name={props.sender_name}\n                    src={props.sender_pic}\n                  />\n                </Tooltip>\n              )}\n              <div\n                style={{\n                  backgroundColor: `${\n                    props.sender_id === props.user_id\n                    ? \"rgb(54,57,62)\"\n                    : \"rgb(40,43,48)\"\n                  }`,\n                  marginLeft: isSameSenderMargin(props.messages, props.m, props.i, props.user_id),\n                  marginTop: isSameUser(props.messages, props.m, props.i, props.user_id) ? 3 : 10,\n                  borderRadius: \"20px\",\n                  padding: \"5px 15px\",\n                  maxWidth: \"75%\",\n                  minWidth:\"230px\",\n                  color: \"white\",\n                  height:props.sender_id === props.user_id?\"140px\":\"180px\",\n                }}\n              >\n                <p class=\"payment_user\">Requested to {receiver}</p>\n                <p class=\"payment_amount\">${amount}</p>\n                <div style={{\"display\":\"flex\"}}>\n                  <p class=\"payment_status\">{status}&ensp;&ensp;</p>\n                  <p class=\"payment_date\">{date}</p>\n                </div>\n                <div>\n                  {!(props.sender_id === props.user_id) && <button class={\"pay_btn\"}>pay</button>}\n                </div>\n              </div>\n            </div>\n    );\n}\n\n\nexport default RequestToken;"]},"metadata":{},"sourceType":"module"}