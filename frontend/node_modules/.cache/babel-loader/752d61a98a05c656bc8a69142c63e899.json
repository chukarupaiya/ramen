{"ast":null,"code":"var _jsxFileName = \"/Users/karupaiyachu/Desktop/project/chat-app/frontend/src/components/payment/RequestToken.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../../config/ChatLogics\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport \"../Pay.css\";\nimport axios from \"axios\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RequestToken = props => {\n  _s();\n\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    notification,\n    setNotification\n  } = ChatState();\n  const toast = useToast();\n\n  const updateMessages = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      console.log(\"updating\" + props.id);\n      const {\n        data\n      } = await axios.post(`/api/message/update`, {\n        messageId: props.id\n      }, config);\n      console.log(\"updating\");\n      console.log(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n\n    props.refAgain();\n  };\n\n  var receiver = \"karupaiya\";\n  var amount = props.content;\n  var status = \"Requested\";\n  var date = \"Dec 30\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [(isSameSender(props.messages, props.m, props.i, props.user_id) || isLastMessage(props.messages, props.i, props.user_id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n      label: props.sender_name,\n      placement: \"bottom-start\",\n      hasArrow: true,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        mt: \"7px\",\n        mr: 1,\n        size: \"sm\",\n        cursor: \"pointer\",\n        name: props.sender_name,\n        src: props.sender_pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `${props.sender_id === props.user_id ? \"rgb(54,57,62)\" : \"rgb(40,43,48)\"}`,\n        marginLeft: isSameSenderMargin(props.messages, props.m, props.i, props.user_id),\n        marginTop: isSameUser(props.messages, props.m, props.i, props.user_id) ? 3 : 10,\n        borderRadius: \"20px\",\n        padding: \"5px 15px\",\n        maxWidth: \"75%\",\n        minWidth: \"230px\",\n        color: \"white\",\n        height: props.sender_id === props.user_id ? \"140px\" : \"180px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"payment_user\",\n        children: [\"Requested to \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"payment_amount\",\n        children: [\"$\", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"payment_status\",\n          children: [status, \"\\u2002\\u2002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"payment_date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !(props.sender_id === props.user_id) && /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"pay_btn\",\n          onClick: updateMessages,\n          children: \"pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this)]\n  }, props.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RequestToken, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n\n_c = RequestToken;\nexport default RequestToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestToken\");","map":{"version":3,"sources":["/Users/karupaiyachu/Desktop/project/chat-app/frontend/src/components/payment/RequestToken.js"],"names":["React","Avatar","Tooltip","ScrollableFeed","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatState","axios","IconButton","Spinner","useToast","RequestToken","props","selectedChat","setSelectedChat","user","notification","setNotification","toast","updateMessages","config","headers","Authorization","token","console","log","id","data","post","messageId","error","title","description","status","duration","isClosable","position","refAgain","receiver","amount","content","date","display","messages","m","i","user_id","sender_name","sender_pic","backgroundColor","sender_id","marginLeft","marginTop","borderRadius","padding","maxWidth","minWidth","color","height"],"mappings":"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","sourcesContent":["import {React} from 'react';\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../../config/ChatLogics\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport \"../Pay.css\";\nimport axios from \"axios\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\n\n\nconst RequestToken=(props)=>{\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n    const toast = useToast();\n\n  const updateMessages = async () => {\n   \n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      console.log(\"updating\"+props.id);\n      const { data } = await axios.post(\n        `/api/message/update`,\n        {\n          messageId:props.id\n        },\n        config\n      );\n      console.log(\"updating\");\n      console.log(data);\n      \n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n   props.refAgain();\n  };\n\n\n\n  var receiver=\"karupaiya\";\n  var amount=props.content;\n  var status=\"Requested\";\n  var date=\"Dec 30\";\n\n\n\n    return(\n        <div style={{ display: \"flex\" }} key={props.id}>\n              {(isSameSender(props.messages, props.m, props.i, props.user_id) ||\n                isLastMessage(props.messages, props.i, props.user_id)) && (\n                <Tooltip\n                  label={props.sender_name}\n                  placement=\"bottom-start\"\n                  hasArrow\n                >\n                  <Avatar\n                    mt=\"7px\"\n                    mr={1}\n                    size=\"sm\"\n                    cursor=\"pointer\"\n                    name={props.sender_name}\n                    src={props.sender_pic}\n                  />\n                </Tooltip>\n              )}\n              <div\n                style={{\n                  backgroundColor: `${\n                    props.sender_id === props.user_id\n                    ? \"rgb(54,57,62)\"\n                    : \"rgb(40,43,48)\"\n                  }`,\n                  marginLeft: isSameSenderMargin(props.messages, props.m, props.i, props.user_id),\n                  marginTop: isSameUser(props.messages, props.m, props.i, props.user_id) ? 3 : 10,\n                  borderRadius: \"20px\",\n                  padding: \"5px 15px\",\n                  maxWidth: \"75%\",\n                  minWidth:\"230px\",\n                  color: \"white\",\n                  height:props.sender_id === props.user_id?\"140px\":\"180px\",\n                }}\n              >\n                <p class=\"payment_user\">Requested to {receiver}</p>\n                <p class=\"payment_amount\">${amount}</p>\n                <div style={{\"display\":\"flex\"}}>\n                  <p class=\"payment_status\">{status}&ensp;&ensp;</p>\n                  <p class=\"payment_date\">{date}</p>\n                </div>\n                <div>\n                  {!(props.sender_id === props.user_id) && <button class={\"pay_btn\"} onClick={updateMessages}>pay</button>}\n                </div>\n              </div>\n            </div>\n    );\n}\n\n\nexport default RequestToken;"]},"metadata":{},"sourceType":"module"}